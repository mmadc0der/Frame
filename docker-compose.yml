services:
  nginx:
    build: 
      context: .
      dockerfile: nginx/Dockerfile
    expose:
      - "80"
      - "443"
    environment:
      - DISABLE_IPV6=true
    depends_on:
      - auth-service
      - name-service
    networks:
      - frontend
      - backend

  auth-service:
    build: ./backend/auth-service
    expose:
      - "${AUTH_SERVICE_PORT}"
    environment:
      - FLASK_APP=app
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ACCESS_TOKEN_EXPIRES=${JWT_ACCESS_TOKEN_EXPIRES}
      - JWT_REFRESH_TOKEN_EXPIRES=${JWT_REFRESH_TOKEN_EXPIRES}
      - LOG_SERVICE_HOST=log-service
      - LOG_SERVICE_PORT=${LOG_SERVICE_PORT}
      - NAME_SERVICE_HOST=name-service
      - NAME_SERVICE_PORT=${NAME_SERVICE_PORT}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      log-service:
        condition: service_started
      name-service:
        condition: service_started
    networks:
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "${LOG_MAX_SIZE}"
        max-file: "${LOG_MAX_FILE}"

  name-service:
    build: ./backend/name-service
    expose:
      - "${NAME_SERVICE_PORT}"
    networks:
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "${LOG_MAX_SIZE}"
        max-file: "${LOG_MAX_FILE}"

  log-service:
    build: ./backend/log-service
    expose:
      - "${LOG_SERVICE_PORT}"
    networks:
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "${LOG_MAX_SIZE}"
        max-file: "${LOG_MAX_FILE}"

  postgres:
    image: postgres:17.2
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "${POSTGRES_PORT}"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "${LOG_MAX_SIZE}"
        max-file: "${LOG_MAX_FILE}"

  redis:
    image: redis:7.4
    command: redis-server --requirepass ${REDIS_PASSWORD}
    expose:
      - "${REDIS_PORT}"
    volumes:
      - redis_data:/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "${LOG_MAX_SIZE}"
        max-file: "${LOG_MAX_FILE}"

networks:
  frontend:
  backend:

volumes:
  postgres_data:
  redis_data: